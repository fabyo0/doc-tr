<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 52407313885d27a4e891e08dd2e2481bcc39e244 Maintainer: nilgun Status: ready -->
<sect1 xml:id="language.operators.increment">
 <title>Arttırım ve Eksiltim İşleçleri</title>
 <para>
  PHP, C tarzı önceden ve sonradan arttırım ve eksiltim işleçlerini
  destekler.
 </para>
 <note>
  <simpara>
   Arttırım ve eksiltim işleçleri sadece sayıları ve dizeleri etkiler.
   Diziler, nesneler, mantıksallar ve özkaynaklar etkilenmez.
   &null; değerini eksiltmenin bir etkisi yoktur fakat arttırmanın sonucu
   <literal>1</literal>'dir.
  </simpara>
 </note>
 <table>
  <title>Arttırım ve Eksiltim İşleçleri</title>
  <tgroup cols="3">
   <thead>
    <row>
     <entry>Örnek</entry>
     <entry>İsim</entry>
     <entry>Etkisi</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry><userinput>++$a</userinput></entry>
     <entry>Önceden arttırım</entry>
     <entry><varname>$a</varname> bir arttırıldıktan sonra
     döndürülür.</entry>
    </row>
    <row>
     <entry><userinput>$a++</userinput></entry>
     <entry>Sonradan arttırım</entry>
     <entry><varname>$a</varname> döndürüldükten sonra değeri bir
     arttırılır.</entry>
    </row>
    <row>
     <entry><userinput>--$a</userinput></entry>
     <entry>Önceden eksiltim</entry>
     <entry><varname>$a</varname> bir eksiltildikten sonra
     döndürülür.</entry>
    </row>
    <row>
     <entry><userinput>$a--</userinput></entry>
     <entry>Sonradan eksiltim</entry>
     <entry><varname>$a</varname> döndürüldükten sonra değeri bir
     eksiltilir.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 <para>
  Basit bir betik örneği:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
echo "<h3>Sonradan arttırım</h3>\n";
$a = 5;
echo "5 olmalı: " . $a++ . "<br />\n";
echo "6 olmalı: " . $a . "<br />\n";

echo "<h3>Önceden arttırım</h3>\n";
$a = 5;
echo "6 olmalı: " . ++$a . "<br />\n";
echo "6 olmalı: " . $a . "<br />\n";

echo "<h3>Sonradan eksiltim</h3>\n";
$a = 5;
echo "5 olmalı: " . $a-- . "<br />\n";
echo "4 olmalı: " . $a . "<br />\n";

echo "<h3>Önceden eksiltim</h3>\n";
$a = 5;
echo "4 olmalı: " . --$a . "<br />\n";
echo "4 olmalı: " . $a . "<br />\n";
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <para>
  PHP, karakter değişkenleri üzerinde çalışırken C'nin değil Perl'in
  yöntemlerini izler. Örneğin, PHP ve Perl'de
  <literal>$a = 'Z'; $a++;</literal> ifadesi <literal>$a</literal>
  içinde 'AA' değerini döndürürken, C'de <literal>a = 'Z'; a++;</literal>
  ifadesi <literal>a</literal> içinde'[' döndürür. <literal>'Z'</literal>
  için ASCII değer 90, <literal>'['</literal> için 91'dir.
  Karakterlerin arttırılabileceğine fakat azaltılamayacağına ve sadece
  ASCII harflerin ve rakamların (a-z ve A-Z, 0-9) desteklendiğine dikkat
  edilmelidir. Diğer karakterler üzerinde arttırım ve eksiltim etkisiz olup
  özgün değer değişmeden döndürürlür.
  <example>
   <title>- Karakter değişkenleri üzerinde aritmetik işlemler</title>
   <programlisting role="php">
<![CDATA[
<?php
echo '== Abecesel dizgeler ==' . PHP_EOL;
$i = 'W';
for ($n=0; $n<6; $n++) {
    echo ++$s . PHP_EOL;
}
// Sayısal dizgeler farklı davranır
echo '== Sayısal dizgeler ==' . PHP_EOL;
$d = 'A8';
for ($n=0; $n<6; $n++) {
    echo ++$d . PHP_EOL;
}
$d = 'A08';
for ($n=0; $n<6; $n++) {
    echo ++$d . PHP_EOL;
}
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
== Abecesel dizgeler ==
X
Y
Z
AA
AB
AC
== Sayısal dizgeler ==
A9
B0
B1
B2
B3
B4
A09
A10
A11
A12
A13
A14
]]>
   </screen>
  </example>
 </para>
 <para>
  Mantıksal değerlere arttırım ve eksiltim uygulamanın bir etkisi olmaz.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
