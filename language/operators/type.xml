<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 52407313885d27a4e891e08dd2e2481bcc39e244 Maintainer: nilgun Status: ready -->
<sect1 xml:id="language.operators.type">
 <title>Tür İşleçleri</title>
 <para>
  <literal>instanceof</literal> işleci, bir PHP değişkeninin belli bir
  <link linkend="language.oop5.basic.class">sınıf</link>ın nesnel örneği
  olup olmadığını saptar:
  <example>
   <title>- <literal>instanceof</literal> ve sınıflar</title>
   <programlisting role="php">
<![CDATA[
<?php
class Sınıfım
{
}

class BaşkaSınıf
{
}
$a = new Sınıfım;

var_dump($a instanceof Sınıfım);
var_dump($a instanceof BaşkaSınıf);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(true)
bool(false)
]]>
   </screen>
  </example>
 </para>
 <para>
  <literal>instanceof</literal> ayrıca, bir değişkenin, bir ebeveyn
  sınıftan miras alınan bir sınıfın nesnel örneği olup olmadığını saptamak
  için de kullanılabilir:
  <example>
   <title>- Miras alınan sınıflar ve <literal>instanceof</literal> kullanımı
   </title>
   <programlisting role="php">
<![CDATA[
<?php
class EbeveynSınıf
{
}

class Sınıfım extends EbeveynSınıf
{
}

$a = new Sınıfım;

var_dump($a instanceof Sınıfım);
var_dump($a instanceof EbeveynSınıf);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(true)
bool(true)
]]>
   </screen>
  </example>
 </para>
 <para>
  Bir nesne bir sınıfın örneği değilse bunu sınamak için  <link
  linkend="language.operators.logical">mantıksal değil işleci</link>
  kullanılabilir.
  <example>
   <title>- Bir sınıfın örneği olmayan bir sınıfın
     <literal>instanceof</literal> ile sınanması</title>
   <programlisting role="php">
<![CDATA[
<?php
class Sınıfım
{
}

$a = new Sınıfım;
var_dump(!($a instanceof stdClass));
?>
]]>
   </programlisting>
  &example.outputs;
  <screen>
<![CDATA[
bool(true)
]]>
   </screen>
  </example>
 </para>
 <para>
  Son olarak, <literal>instanceof</literal> işleci, bir değişkenin, bir <link
  linkend="language.oop5.interfaces">arayüz</link>ü gerçekleyen bir
  sınıfın örneği olup olmadığını sınamak için kullanılabilir:
  <example>
   <title>- Arayüzler için <literal>instanceof</literal> kullanımı</title>
   <programlisting role="php">
<![CDATA[
<?php
interface Arayüzüm
{
}

class Sınıfım implements Arayüzüm
{
}

$a = new Sınıfım;

var_dump($a instanceof Sınıfım);
var_dump($a instanceof Arayüzüm);
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
bool(true)
bool(true)
]]>
   </screen>
  </example>
 </para>
 <para>
  <literal>instanceof</literal> işlecinin normal olarak bir sayıl sınıf ismi ile
  kullanılmasının yanında başka bir nesne veya bir dizge değişkeni ile de
  kullanılabilir:
  <example>
   <title>- Başka değişkenlerle <literal>instanceof</literal> kullanımı</title>
   <programlisting role="php">
<![CDATA[
<?php
interface Arayüzüm
{
}

class Sınıfım implements Arayüzüm
{
}

$a = new Sınıfım;
$b = new Sınıfım;
$c = 'Sınıfım';
$d = 'BaşkaSınıf';

var_dump($a instanceof $b); // $b, Sınıfım sınıfının bir nesnesidir
var_dump($a instanceof $c); // $c 'Sınıfım' dizgesini içerir
var_dump($a instanceof $d); // $d 'BaşkaSınıf' dizgesini içerir
?>
]]>
  </programlisting>
  &example.outputs;
  <screen>
<![CDATA[
bool(true)
bool(true)
bool(false)
]]>
   </screen>
  </example>
 </para>
 <para>
  Sınanan değişken bir nesne değilse instanceof hata çıktılamaz, basitçe
  &false; döndürür. Sabitlere, her nasılsa, PHP 7.3.0 öncesinde izin
  verilmezdi.
  <example>
   <title>- Değişkenleri sınamak için <literal>instanceof</literal> kullanımı</title>
   <programlisting role="php">
<![CDATA[
<?php
$a = 1;
$b = NULL;
$c = imagecreate(5, 5);
var_dump($a instanceof stdClass); // $a bir tamsayıdır
var_dump($b instanceof stdClass); // $b NULL'dur
var_dump($c instanceof stdClass); // $c bir özkaynaktır
var_dump(FALSE instanceof stdClass);
?>
]]>
  </programlisting>
  &example.outputs;
  <screen>
<![CDATA[
bool(false)
bool(false)
bool(false)
PHP Fatal error:  instanceof expects an object instance, constant given
]]>
   </screen>
  </example>
 </para>
 <para>
  PHP 7.3.0 ve sonrasında, <literal>instanceof</literal> işlecinin sol
  tarafında sabitlere izin verilmektedir.
  <example>
   <title>- Sabit kullanımını sınamak için <literal>instanceof</literal> kullanımı</title>
   <programlisting role="php">
<![CDATA[
<?php
var_dump(FALSE instanceof stdClass);
?>
]]>
  </programlisting>
  &example.outputs.73;
  <screen>
<![CDATA[
bool(false)
]]>
   </screen>
  </example>
 </para>
 <para>
  PHP 8.0.0 ve sonrasında, <literal>instanceof</literal> keyfi ifadelerde
  kullanılabilmektedir. Bu ifadeler parantezlerle sarmalanmalı
  ve bir dizge üretmelidir.
  <!-- RFC: https://wiki.php.net/rfc/variable_syntax_tweaks -->
  <example>
   <title>- Keyfi ifadelerde <literal>instanceof</literal> kullanımı</title>
   <programlisting role="php">
    <![CDATA[
<?php

class ClassA extends \stdClass {}
class ClassB extends \stdClass {}
class ClassC extends ClassB {}
class ClassD extends ClassA {}

function getSomeClass(): string
{
    return ClassA::class;
}

var_dump(new ClassA instanceof ('std' . 'Class'));
var_dump(new ClassB instanceof ('Class' . 'B'));
var_dump(new ClassC instanceof ('Class' . 'A'));
var_dump(new ClassD instanceof (getSomeClass()));
?>
]]>
   </programlisting>
   &example.outputs.8;
   <screen>
    <![CDATA[
bool(true)
bool(true)
bool(false)
bool(true)
]]>
   </screen>
  </example>
 </para>
 <simpara>
  <literal>instanceof</literal> işleci yerine kullanılabilecek
  bir işlev de vardır: <function>is_a</function>
 </simpara>

 <sect2 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_class</function></member>
    <member><function>is_a</function></member>
   </simplelist>
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
