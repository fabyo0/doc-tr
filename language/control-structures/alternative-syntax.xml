<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a41057cbdf053fd8c3a3bec6f1bbf113ffec8e42 Maintainer: nilgun Status: ready -->
<sect1 xml:id="control-structures.alternative-syntax"  xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Denetim yapıları için diğer sözdizimi</title>
 <?phpdoc print-version-for="control-structures.alternative-syntax"?>
 <para>
  PHP bazı denetim yapıları için farklı bir sözdizimi sağlar. Bu yapılar
  <literal>if</literal>, <literal>while</literal>, <literal>for</literal>,
  <literal>foreach</literal> ve <literal>switch</literal> yapılarıdır.
  Her durumda, bu farklı sözdiziminin basit şekli açılışta kullanılan
  kaşlı ayracın yerine iki nokta imi (:) ve kapanışta kullanılan kaşlı
  ayraç yerine de sırasıyla <literal>endif;</literal>,
  <literal>endwhile;</literal>, <literal>endfor;</literal>,
  <literal>endforeach;</literal> ya da <literal>endswitch;</literal>
  deyimlerinden birini kullanmaktır.
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php if ($a == 5): ?>
A eşittir 5
<?php endif; ?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <simpara>
  Yukarıdaki örnekte, içeriği "A eşittir 5" olan HTML bloğu iki noktalı
  sözdimi kullanılarak yazılmış bir <literal>if</literal> deyiminin içine
  gömülmüştür. HTML bloğu yalnızca <varname>$a</varname> değişkeni 5'e
  eşit olduğunda gösterilecektir.
 </simpara>
 <para>
  İki noktalı sözdimi, <literal>else</literal> ve <literal>elseif</literal>
  için de kullanılabilir. Birazdan vereceğimiz örnek, iki noktalı
  sözdizimi ile yazılmış <literal>elseif</literal> ve
  <literal>else</literal> içeren bir <literal>if</literal> yapısıdır:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
if ($a == 5):
    echo "a eşittir 5";
    echo "...";
elseif ($a == 6):
    echo "a eşittir 6";
    echo "!!!";
else:
    echo "a ne 5 ne de 6'dır";
endif;
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <note>
  <para>
   Aynı denetim kümesi içinde karışık sözdizimi desteklenmemektedir.
  </para>
 </note>
 <warning>
  <para>
   <literal>switch</literal> deyimi ile ilk <literal>case</literal> deyimi
   arasındaki herhangi bir çıktı (boşluklar dahil) sözdizimi hatasına
   yol açar. Örneğin, aşağıdaki kod geçersizdir:
  </para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php switch ($foo): ?>
    <?php case 1: ?>
    ...
<?php endswitch; ?>
]]>
   </programlisting>
  </informalexample>
  <para>
   Fakat bu örnek geçerlidir.
   <literal>switch</literal> deyiminden sonraki satırsonu karakteri
   <literal>?&gt;</literal> kapama etiketinin parçası olarak ele
   alınıp <literal>switch</literal> ile <literal>case</literal>
   arasında hiçbir şey çıktılanmaz:
  </para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php switch ($foo): ?>

<?php case 1: ?>
    ...
<?php endswitch; ?>
]]>
   </programlisting>
  </informalexample>
 </warning>
 <para>
  Daha fazla örnek için <link linkend="control-structures.while"
  >while</link>, <link linkend="control-structures.for">for</link> ve <link
  linkend="control-structures.if">if</link> cümleciklerine bakabilirsiniz.
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
