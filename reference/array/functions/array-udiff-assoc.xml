<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 56509d07ae636f076057f55bbb2572ab7b7a39eb Maintainer: nilgun Status: ready -->
<refentry xml:id="function.array-udiff-assoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_udiff_assoc</refname>
  <refpurpose>Veri karşılaştırması için bir geriçağırım işlevi
  kullanarak diziler arasındaki farkı indislerine de bakarak bulur
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_udiff_assoc</methodname>
   <methodparam><type>array</type><parameter>dizi</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>diziler</parameter></methodparam>
   <methodparam><type>callable</type><parameter>değer_karş_işlevi</parameter></methodparam>
  </methodsynopsis>
  <para>
   Veri karşılaştırması için bir geriçağırım işlevi kullanarak diziler
   arasındaki farkı indislerine de bakarak bulur.
  </para>
  <note>
   <simpara>
    Bu işlevin bir n boyutlu dizinin tek bir boyutunu ele alacağına dikkat
    ediniz. Şüphesiz daha fazla sayıda boyutun hesaba katılmasını, örneğin
    <literal>array_udiff_assoc($dizi1[0], $dizi2[0],
    "veri_karş_işlevi");</literal> gibi bir kullanımla sağlayabilirsiniz.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizi</parameter></term>
     <listitem>
      <para>
       İlk dizi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>diziler</parameter></term>
     <listitem>
      <para>
       Karşılaştırılacak diziler.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>değer_karş_işlevi</parameter></term>
     <listitem>
      &sort.callback.description;
      &sort.callback.description.presort;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Diğer bağımsız değişkenlerin hiçbirinde mevcut olmayan tüm
   <parameter>dizi</parameter> değerlerini içeren bir dizi ile döner.
   Karşılaştırmada <function>array_diff</function> ve
   <function>array_udiff</function> işlevlerinden farklı olarak anahtarlar
   kullanılır. Verilerin karşılaştırması kullanıcı tarafından tanımlanmış
   bir işlev kullanılarak yapılır. Verileri karşılaştırmak için dahili bir
   işlev kullanan <function>array_diff_assoc</function> işlevinden farklı
   olarak bu işlev kullanıcı tanımlı bir işlev kullanır.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>array_udiff_assoc</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
class cr {
    private $priv_member;
    function __construct($val)
    {
        $this->priv_member = $val;
    }

    static function comp_func_cr($a, $b)
    {
        if ($a->priv_member === $b->priv_member) return 0;
        return ($a->priv_member > $b->priv_member)? 1:-1;
    }
}

$a = array("0.1" => new cr(9), "0.5" => new cr(12), 0 => new cr(23),
                1=> new cr(4), 2 => new cr(-15),);
$b = array("0.2" => new cr(9), "0.5" => new cr(22), 0 => new cr(3),
                1=> new cr(4), 2 => new cr(-15),);

$result = array_udiff_assoc($a, $b, array("cr", "comp_func_cr"));
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0.1] => cr Object
        (
            [priv_member:private] => 9
        )

    [0.5] => cr Object
        (
            [priv_member:private] => 12
        )

    [0] => cr Object
        (
            [priv_member:private] => 23
        )
)
]]>
    </screen>
   </example>
  </para>
  <simpara>
   Yukarıdaki örnekte gördüğünüz gibi <literal>"1" =&gt; new cr(4)</literal>
   çifti her iki dizide de mevcut olduğundan çıktıda gözükmemektedir.
  </simpara>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_diff</function></member>
    <member><function>array_diff_assoc</function></member>
    <member><function>array_diff_uassoc</function></member>
    <member><function>array_udiff</function></member>
    <member><function>array_udiff_uassoc</function></member>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
    <member><function>array_uintersect</function></member>
    <member><function>array_uintersect_assoc</function></member>
    <member><function>array_uintersect_uassoc</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
