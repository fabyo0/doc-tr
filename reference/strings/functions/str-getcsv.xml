<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 61374bbe228e8e9c55a24aba59a1e2bb2a871148 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.str-getcsv">
 <refnamediv>
  <refname>str_getcsv</refname>
  <refpurpose>Bir CSV dizgesinin girdilerini bir dizinin elemanlarına
  paylaştırır</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>str_getcsv</methodname>
   <methodparam><type>string</type><parameter>dizge</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>ayraç</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>sarmalayıcı</parameter><initializer>"\""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>öncelem</parameter><initializer>"\\"</initializer></methodparam>
  </methodsynopsis>
  <para>
   <acronym>CSV</acronym> biçemindeki alanları bulmak için girdi dizgesini
   çözümler ve okunan alanları içeren bir dizi döndürür.
  </para>
  <note>
   <para>
    Bu işlevde yerel ayarı dikkate alınır. <constant>LC_CTYPE</constant> örneğin
    <literal>en_US.UTF-8</literal> ise tek baytlı karakterler içeren dizgeler bu
    işlev tarafından yanlış yorumlanabilir.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dizge</parameter></term>
     <listitem>
      <para>
       Ayrıştırılacak dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ayraç</parameter></term>
     <listitem>
      <para>
       Alanlar arasında kullanılan ayraç (tek baytlık bir karakter).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sarmalayıcı</parameter></term>
     <listitem>
      <para>
       Alanı sarmalayan karakter (tek baytlık bir karakter).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>öncelem</parameter></term>
     <listitem>
      <para>
       Önceleme karakteri (tek baytlık bir karakter).
       Tersbölü (<literal>\</literal>) öntanımlıdır.
      </para>
      <note>
       <simpara>
        Genellikle bir alanın içindeki <parameter>sarmalayıcı</parameter>
        karakteri kendisiyle öncelenir; ancak, bunun yerine
        <parameter>öncelem</parameter> kullanılabilir. Bu nedenle, öntanımlı
        <literal>""</literal> ve <literal>\"</literal> değerleri için de aynı şey
        geçerlidir. <parameter>öncelem</parameter> karakterinin
        <parameter>sarmalayıcı</parameter> karakterini öncelemek dışında özel bir
        anlamı yoktur, hatta kendisini öncelemesi bile amaçlanmamıştır.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Okunan alanları içeren bir dizi döner.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.4.0</entry>
       <entry>
        <parameter>öncelem</parameter> bağımsız değişkeni özel önceleme mekanizmasını
        devre dışı bırakmak için boş dizgeyi artık sinyal olarak yorumluyor.
        Evvelce, boş dizge, bağımsız değişkenin öntanımlı değeriydi.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

  <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>str_getcsv</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php

$string = 'PHP,Java,Python,Kotlin,Swift';
$data = str_getcsv($string);

var_dump($data);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(5) {
  [0]=>
  string(3) "PHP"
  [1]=>
  string(4) "Java"
  [2]=>
  string(6) "Python"
  [3]=>
  string(6) "Kotlin"
  [4]=>
  string(5) "Swift"
}
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>- Boş dizgeli <function>str_getcsv</function> örneği</title>
    <caution>
     <simpara>
      Boş dizge durumunda bu işlev boş dizi yerine <code>[null]</code>
      değerini döndürür.
     </simpara>
    </caution>
    <programlisting role="php">
<![CDATA[
<?php

$string = '';
$data = str_getcsv($string);

var_dump($data);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(1) {
  [0]=>
  NULL
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fgetcsv</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
