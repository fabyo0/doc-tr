<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2eb2cdbe58d2f35cb88ad06fa090f3c0ccd9f860 Maintainer: nilgun Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strrpos">
 <refnamediv>
  <refname>strrpos</refname>
  <refpurpose>Bir dizgede bir karakterin sonuncusunu bulur</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>strrpos</methodname>
   <methodparam><type>string</type><parameter>samanlık</parameter></methodparam>
   <methodparam><type>string</type><parameter>iğne</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>başlangıç</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <parameter>samanlık</parameter> dizgesi içindeki son
   <parameter>iğne</parameter> dizgesinin sayısal konumunu döndürür.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>samanlık</parameter></term>
     <listitem>
      <para>
       İğnenin aranacağı dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iğne</parameter></term>
     <listitem>
      <para>
       Aranacak dizge.
      </para>
       &strings.parameter.needle.non-string;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>başlangıç</parameter></term>
     <listitem>
      <para>
       Sıfır veya pozitifse <parameter>samanlık</parameter> içinde ilk
       <parameter>başlangıç</parameter> bayt atlanıp arama soldan sağa
       yapılır.
      </para>
      <para>
       Negatif ise <parameter>samanlık</parameter> içinde son
       <parameter>başlangıç</parameter> bayt atlanıp arama sağdan sola
       yapılır.
      </para>
       <note>
        <para>
         Bu aslında, son <parameter>başlangıç</parameter> bayttaki veya
         öncesindeki son <parameter>iğne</parameter>nin konumunu bulmak için
         kullanılır.
        </para>
       </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Konumu <parameter>samanlık</parameter> dizgesinin başına göre
   (başlangıçtan ve arama yönünden bağımsız) bir tamsayı olarak döndürür.
  </para>
   <note>
    <simpara>
     Dizgenin ilk karakterinin konumu 1 değil 0'dır.
    </simpara>
   </note>
  <para>
   Eğer <parameter>iğne</parameter> bulunamazsa, &false; döner.
  </para>
  &return.falseproblem;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &strings.changelog.needle-empty;
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>iğne</parameter> olarak bir tamsayı aktarımı artık kabul
        edilmiyor.
       </entry>
      </row>
      <row>
       <entry>7.3.0</entry>
       <entry>
        <parameter>iğne</parameter> olarak bir tamsayı aktarımı artık
        önerilmiyor.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- Samanlıkta iğne aramak</title>
    <para>
     "Karakter 0. konumda bulundu" veya "Karakter yok" şeklinde dönen değer
     kolayca yanlış yorumlanabilir. Şimdi farkın nasıl ayırdedileceğini görelim:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$pos = strrpos($mystring, "b");
if ($pos === false) { // üçlü eşittire dikkat
    // yokmuş...
}

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- Başlangıç belirtmek</title>
    <programlisting role="php">
<![CDATA[
<?php
$foo = "0123456789a123456789b123456789c";

// Baştan 0. bayttan itibaren '0' bulmak için
var_dump(strrpos($foo, '0', 0));

// Baştan 1. bayttan itibaren (0. bayttan sonra) '0' bulmak için
var_dump(strrpos($foo, '0', 1));

// Baştan 21. bayttan itibaren (20. bayttan sonra) '7' bulmak için
var_dump(strrpos($foo, '7', 20));

// Baştan 29. bayttan itibaren (28. bayttan sonra) '7' bulmak için
var_dump(strrpos($foo, '7', 28));

// Sondan 5. bayttan itibaren sağdan sola doğru '7' bulmak için
var_dump(strrpos($foo, '7', -5));

// Sondan 2. bayttan itibaren sağdan sola doğru 'c' bulmak için
var_dump(strrpos($foo, 'c', -2));

// Sondan 2. bayttan itibaren sağdan sola doğru'9c' bulmak için
var_dump(strrpos($foo, '9c', -2));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
int(0)
bool(false)
int(27)
bool(false)
int(17)
bool(false)
int(29)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strpos</function></member>
     <member><function>stripos</function></member>
    <member><function>strripos</function></member>
    <member><function>strrchr</function></member>
    <member><function>substr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
