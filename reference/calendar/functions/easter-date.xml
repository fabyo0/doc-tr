<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a0fcdcb58023bd4cb017fdba511df29b9f7a25f5 Maintainer: aydin Status: ready -->
<refentry xml:id="function.easter-date" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>easter_date</refname>
  <refpurpose>Verilen yıl için paskalya gece yarısının unix zaman
   damgasını döner</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>easter_date</methodname>
    <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>yıl</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>kip</parameter><initializer><constant>CAL_EASTER_DEFAULT</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   Verilen yıl için paskalya gece yarısının unix zaman damgasını döner.
  </para>
  <para>
   Paskalya günü, ilk olarak M.S. 325 yılında İznik Konseyi tarafından,
   İlk dolunaydan veya Bahar ılımından (ekinoks) sonraki ilk pazar günü olarak
   tanımlanmıştır. Ilımın daima 21 Mart tarihine rastladığı varsayılır ve
   hesaplama dolunayın ve sonraki pazar gününün hesaplanmasına indirgenir.
   Kullanılan algoritma Dionysius Exiguus tarafından 532 yılında tanıtıldı.
   Jülyen takvimi döneminde (1753&apos;den önceki yıllar) ayın evrelerini
   takip etmek için basit 19 yıllık çevrim kullanıldı. Gregoryen takvimi
   döneminde (1753&apos;den sonraki yıllar - Clavius ve Lilius tarafından
   hazırlandı ve XIII Papa Gregory tarafından Ekim 1582&apos;de tanıtıldı,
   Eylül 1752&apos;de Britanya ve kolonilerine yayıldı) çevrimin daha doğru
   olması için 2 düzeltme değişkeni eklendi.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>yil</parameter></term>
     <listitem>
      <para>
       32 bitlik sistemlerde 1970-2037, 64 bitlik sistemlerde
       1970-2,000,000,000 aralığındaki değerlerden biri. Atlanırsa veya
       &null; belirtilirse yerel zamana göre geçerli yıl öntanımlıdır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>kip</parameter></term>
     <listitem>
      <para>
       <constant>CAL_EASTER_ALWAYS_JULIAN</constant> atanırsa Paskalya
       günlerinin Jülyen takvimine göre hesaplanmasını sağlar. Ayrıca, bkz.
       <link linkend="calendar.constants">takvim sabitleri</link>.
       </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Unix zaman damgası olarak paskalya günü.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   32 bitlik sistemlerde <parameter>yıl</parameter> 1970'ten önceyse veya
   2037'den sonraysa veya 64 bitlik sistemlerde 2,000,000,000'dan sonraysa
   <classname>ValueError</classname> istisnası oluşur.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        64 bitlik sistemlerde <parameter>yıl</parameter> artık
        1970-2,000,000,000 aralığında değer kabul ediyor.
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>yıl</parameter> artık &null; olabiliyor.
       </entry>
      </row>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>yıl</parameter> izin verilen aralığın dışındaysa artık
        <classname>ValueError</classname> istisnası oluşuyor. Evvelce bir
        <constant>E_WARNING</constant> oluşur ve işlev &false; döndürürdü.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>easter_date</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php

echo date("M-d-Y", easter_date(1999));        // Apr-04-1999
echo date("M-d-Y", easter_date(2000));        // Apr-23-2000
echo date("M-d-Y", easter_date(2001));        // Apr-15-2001

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>easter_date</function>, PHP'nin dahili tarih ve saat
    işlevlerinden ziyade, sisteminizin C kütüphanesinin zaman işlevlerine
    dayanır. Sonuç olarak, <function>easter_date</function>, PHP'nin <link
    linkend="ini.date.timezone">öntanımlı saat dilimini</link> kullanmak
    yerine, çalışması gereken saat dilimini belirlemek için
    <literal>TZ</literal> ortam değişkenini kullandığından, bu işlevi
    PHP'deki diğer tarih işlevleriyle birlikte kullanmak beklenmedik
    davranışlara neden olabilir.
   </para>
   <para>
    Geçici bir çözüm olarak, Paskalya'nın başlangıcını PHP saat diliminizde
    hesaplamak için <function>easter_days</function> işlevi
    <classname>DateTime</classname> ve <classname>DateInterval</classname>
    ile aşağıdaki gibi kullanılabilir:
   </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function get_easter_datetime($year) {
    $base = new DateTime("$year-03-21");
    $days = easter_days($year);

    return $base->add(new DateInterval("P{$days}D"));
}

foreach (range(2012, 2015) as $year) {
    printf("Easter in %d is on %s\n",
           $year,
           get_easter_datetime($year)->format('F j'));
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Easter in 2012 is on April 8
Easter in 2013 is on March 31
Easter in 2014 is on April 20
Easter in 2015 is on April 5
]]>
    </screen>
   </informalexample>
  </note>

   <example>
    <title>- <function>easter_date</function> ile <classname>DateTime</classname> kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php

$timestamp = easter_date(2023);

$datetime = new \DateTime();
$datetime->setTimestamp($timestamp);

echo $datetime->format('M-d-Y'); // Apr-09-2023

?>
]]>
    </programlisting>
   </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     1970&apos;den önce veya 2037&apos;den sonraki Paskalya günleri için
     <function>easter_days</function>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
