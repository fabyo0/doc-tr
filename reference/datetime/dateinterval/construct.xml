<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 71692b6f4cace8dca72a18ccd80d4cd7305e5d4e Maintainer: behzat Status: ready -->
<refentry xml:id="dateinterval.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DateInterval::__construct</refname>
  <refpurpose>Yeni bir <classname>DateInterval</classname> nesnesi oluşturur
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="DateInterval">
   <modifier>public</modifier> <methodname>DateInterval::__construct</methodname>
   <methodparam><type>string</type><parameter>duration</parameter></methodparam>
  </constructorsynopsis>
  <para>
   Yeni bir <classname>DateInterval</classname> nesnesi oluşturur.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>duration</parameter></term>
     <listitem>
      <para>
       Dizge türünde zaman aralığı belirtimi.
      </para>
      <para>
       Zaman aralığını (<quote>period</quote>) belirtmek için biçem
       <literal>P</literal> harfiyle başlar, ardından süreyi belirten bir
       tamsayı değer gelir. Süre zaman bileşenleri içeriyorsa bunların önüne
       <literal>T</literal> harfi getirilir.
      </para>
      <para>
       <table>
        <title>
         <parameter>duration</parameter> Belirteçleri
        </title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Belirteç</entry>
           <entry>Açıklama</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><literal>Y</literal></entry>
           <entry>Yıl</entry>
          </row>
          <row>
           <entry><literal>M</literal></entry>
           <entry>Ay</entry>
          </row>
          <row>
           <entry><literal>D</literal></entry>
           <entry>Gün</entry>
          </row>
          <row>
           <entry><literal>W</literal></entry>
           <entry>
            Hafta. Gün sayısına dönüştürülebilir. PHP 8.0.0 öncesinde,
            D harfiyle birlikte belirtilemiyordu.
           </entry>
          </row>
          <row>
           <entry><literal>H</literal></entry>
           <entry>Saat</entry>
          </row>
          <row>
           <entry><literal>M</literal></entry>
           <entry>Dakika</entry>
          </row>
          <row>
           <entry><literal>S</literal></entry>
           <entry>saniye</entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       Burada bazı basit örneklere yer verilmiştir.
       İki gün: <literal>P2D</literal>.
       İki saniye: <literal>PT2S</literal>.
       Altı yıl, 5 dakika: <literal>P6YT5M</literal>.
      </para>
      <note>
       <para>
        Birimler belirtilirken en büyük ölçekli birim solda en küçük ölçekli
        birim sağda kalacak şekilde veri girilir. Dolayısıyla, örneğin, aylar
        yıllardan sonra, günlerden önce yer alır. Bur yıl dört gün
        <literal>P4D1Y</literal> değil <literal>P1Y4D</literal> olarak ifade
        edilir.
       </para>
      </note>
      <para>
       Belirtim bir tarih saat olarak da gösterilebilir. Örneğin, bir yıl dört
       gün <literal>P0001-00-04T00:00:00</literal> olarak gösterilebilir. Fakat
       bu biçemde belirtilen değerler birime tanınan azami değeri aşmamalıdır
       (örneğin <literal>25</literal> saat geçersizdir).
      </para>
      <para>
       Bu biçemler <link xlink:href="&url.iso-8601.duration;">ISO 8601 süre
       belirtimi</link>ne dayanır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <parameter>zaman_aralığı</parameter> bir zaman aralığına çözümlenemediğinde
   <classname>DateMalformedIntervalStringException</classname>
   istisnası oluşur.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.3.0</entry>
      <entry>
       <exceptionname>Exception</exceptionname> yerine artık
       <exceptionname>DateMalformedIntervalStringException</exceptionname>
       istisnası oluşuyor.
      </entry>
     </row>
     <row>
      <entry>8.2.0</entry>
      <entry>
       Yalnızca <literal>y</literal>'den <literal>f</literal>'ye kadar
       özellikler ile <literal>invert</literal> ve <literal>days</literal>
       özelliklerine ek olarak yeni mantıksal <literal>from_string</literal>
       özelliği görünür olacaktır.
      </entry>
     </row>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <literal>W</literal> artık <literal>D</literal> ile birlikte
       belirtilebiliyor.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <classname>DateInterval</classname> nesnelerinin oluşturulması ve kullanılması</title>
    <programlisting role="php">
<![CDATA[
<?php
// Belli bir tarih oluştur
$someDate = \DateTime::createFromFormat("Y-m-d H:i", "2022-08-25 14:18");

// Tarih aralığı oluştur
$interval = new \DateInterval("P7D");

// Tarih aralığını ekle
$someDate->add($interval);

// Tarih aralığını dizgeye dönüştür
echo $interval->format("%d");
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
7
    </screen>
   </example>
  </para>

  <para>
   <example>
    <title>- <classname>DateInterval</classname> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php

$interval = new DateInterval('P1W2D');
var_dump($interval);

?>
]]>
    </programlisting>
    &example.outputs.82;
    <screen role="php">
<![CDATA[
object(DateInterval)#1 (10) {
  ["y"]=>
  int(0)
  ["m"]=>
  int(0)
  ["d"]=>
  int(9)
  ["h"]=>
  int(0)
  ["i"]=>
  int(0)
  ["s"]=>
  int(0)
  ["f"]=>
  float(0)
  ["invert"]=>
  int(0)
  ["days"]=>
  bool(false)
  ["from_string"]=>
  bool(false)
}
]]>
    </screen>
    &example.outputs.8;
    <screen role="php">
<![CDATA[
object(DateInterval)#1 (16) {
  ["y"]=>
  int(0)
  ["m"]=>
  int(0)
  ["d"]=>
  int(9)
  ["h"]=>
  int(0)
  ["i"]=>
  int(0)
  ["s"]=>
  int(0)
  ["f"]=>
  float(0)
  ["weekday"]=>
  int(0)
  ["weekday_behavior"]=>
  int(0)
  ["first_last_day_of"]=>
  int(0)
  ["invert"]=>
  int(0)
  ["days"]=>
  bool(false)
  ["special_type"]=>
  int(0)
  ["special_amount"]=>
  int(0)
  ["have_weekday_relative"]=>
  int(0)
  ["have_special_relative"]=>
  int(0)
}
]]>
    </screen>
    &example.outputs.7;
    <screen role="php">
     <![CDATA[
object(DateInterval)#1 (16) {
  ["y"]=>
  int(0)
  ["m"]=>
  int(0)
  ["d"]=>
  int(2)
  ["h"]=>
  int(0)
  ["i"]=>
  int(0)
  ["s"]=>
  int(0)
  ["f"]=>
  float(0)
  ["weekday"]=>
  int(0)
  ["weekday_behavior"]=>
  int(0)
  ["first_last_day_of"]=>
  int(0)
  ["invert"]=>
  int(0)
  ["days"]=>
  bool(false)
  ["special_type"]=>
  int(0)
  ["special_amount"]=>
  int(0)
  ["have_weekday_relative"]=>
  int(0)
  ["have_special_relative"]=>
  int(0)
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>DateInterval::format</function></member>
    <member><function>DateTime::add</function></member>
    <member><function>DateTime::sub</function></member>
    <member><function>DateTime::diff</function></member>
   </simplelist>
   </para>
  </refsect1>
</refentry>

