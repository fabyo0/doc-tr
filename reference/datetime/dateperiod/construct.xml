<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7d81260767f008218ffd338b365cfa3d10eb3d15 Maintainer: behzat Status: ready -->
<refentry xml:id="dateperiod.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>DatePeriod::__construct</refname>
  <refpurpose>Yeni bir <classname>DatePeriod</classname> nesnesi oluşturur
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="DatePeriod">
   <modifier>public</modifier> <methodname>DatePeriod::__construct</methodname>
   <methodparam><type>DateTimeInterface</type><parameter>start</parameter></methodparam>
   <methodparam><type>DateInterval</type><parameter>interval</parameter></methodparam>
   <methodparam><type>int</type><parameter>recurrences</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </constructorsynopsis>
  <constructorsynopsis role="DatePeriod">
   <modifier>public</modifier> <methodname>DatePeriod::__construct</methodname>
   <methodparam><type>DateTimeInterface</type><parameter>start</parameter></methodparam>
   <methodparam><type>DateInterval</type><parameter>interval</parameter></methodparam>
   <methodparam><type>DateTimeInterface</type><parameter>end</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
  </constructorsynopsis>
  <warning>
   <constructorsynopsis role="DatePeriod">
    <modifier>public</modifier> <methodname>DatePeriod::__construct</methodname>
    <methodparam><type>string</type><parameter>isostr</parameter></methodparam>
    <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   </constructorsynopsis>
   <simpara>
    Bu kullanım artık önerilmiyor, yerine
    <methodname>DatePeriod::createFromISO8601String</methodname>
    kullanılmalıdır.
   </simpara>
  </warning>
  <para>
   Yeni bir <classname>DatePeriod</classname> nesnesi oluşturur.
  </para>
  <para>
   <classname>DatePeriod</classname> nesneleri, bir başlangıç
   (<parameter>start</parameter>) tarihinden, bir aralıktan
   (<parameter>interval</parameter>) ve bir bitiş (<parameter>end</parameter>)
   tarihinden veya yineleme sayısından (<parameter>recurrences</parameter>)
   bir dizi <classname>DateTimeImmutable</classname> veya
   <classname>DateTime</classname> nesnesi oluşturmak için yineleyici olarak
   kullanılabilir.
  </para>
  <para>
   Nesnelerden dönen sınıf başlangıç (<parameter>start</parameter>)
   nesnesinin ata sınıfı olan <classname>DateTimeImmutable</classname>
   veya <classname>DateTime</classname> sınıfına eşdeğerdir.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       Dönemin başlangıç tarihi. Öntanımlı olarak, sonuç kümesine dahil edilir.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>interval</parameter></term>
     <listitem>
      <para>
       Dönemsel yinelemeler arasındaki boşluk.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>recurrences</parameter></term>
     <listitem>
      <para>
       Yineleme sayısı. <literal>0</literal>'dan büyük olmalıdır.
       Dönen sonuç sayısı, başlangıç tarihi öntanımlı olarak sonuç
       kümesine dahil edildiğinden bundan büyük olmalıdır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>end</parameter></term>
     <listitem>
      <para>
       Dönemin bitiş tarihi. Öntanımlı olarak, sonuç kümesine dahil edilmez.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>isostr</parameter></term>
     <listitem>
      <para>
       <link xlink:href="&url.iso-8601.repeating_intervals;">ISO 8601
        tekrarlanan aralık belirtimi</link>nin bir alt kümesi.
      </para>
      <para>
       PHP'nin desteklediği ISO 8601 tekrarlanan aralık belirtimi
       özelliklerinden bazı örnekler:
      </para>
      <orderedlist>
       <listitem>
        <simpara>
         sıfır oluşumları (<literal>R0/</literal>)
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         <literal>+02:00</literal> gibi, UTC (<literal>Z</literal>)
         dışında kalan diğer zaman dilimleri.
        </simpara>
       </listitem>
      </orderedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Başlangıç ve bitiş tarihleri ile belirli davranışları denetlemek için
       kullanılan bit alanı.
      </para>
      <para>
       Başlangıç tarihini, dönem içindeki yinelenen tarihler kümesinden hariç
       tutmak için <constant>DatePeriod::EXCLUDE_START_DATE</constant> sabiti
       kullanılır.
      </para>
      <para>
       Bitiş tarihini, dönem içindeki yinelenen tarihler kümesine dahil etmek
       için <constant>DatePeriod::INCLUDE_END_DATE</constant> sabiti
       kullanılır.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   <parameter>isostr</parameter> geçerli bir ISO 8601 dönemi olarak
   çözümlenemediğine <classname>DateMalformedPeriodStringException</classname>
   istisnası oluşur. PHP 8.3 öncesinde,
   <exceptionname>Exception</exceptionname> istisnası oluşuyordu.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        <exceptionname>Exception</exceptionname> yerine artık
        <exceptionname>DateMalformedPeriodStringException</exceptionname>
        istisnası oluşuyor.
       </entry>
      </row>
      <row>
       <entry>8.2.0</entry>
       <entry>
        <constant>DatePeriod::INCLUDE_END_DATE</constant> sabiti eklendi.
       </entry>
      </row>
      <row>
        <entry>7.2.19, 7.3.6, 7.4.0</entry>
       <entry>
         <parameter>recurrences</parameter> artık <literal>0</literal>'dan
         büyük olmak zorunda.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- DatePeriod örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$start = new DateTime('2012-07-01');
$interval = new DateInterval('P7D');
$end = new DateTime('2012-07-31');
$recurrences = 4;
$iso = 'R4/2012-07-01T00:00:00Z/P7D';

// Hepsi eşdeğer
$period = new DatePeriod($start, $interval, $recurrences);
$period = new DatePeriod($start, $interval, $end);
$period = new DatePeriod($iso);

// DatePeriod nesnesi üzerinde yineleme yaparak
// yinelenen dönemlerin tarihleri basılabilir.
foreach ($period as $date) {
    echo $date->format('Y-m-d')."\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
2012-07-01
2012-07-08
2012-07-15
2012-07-22
2012-07-29
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>- <constant>DatePeriod::EXCLUDE_START_DATE</constant>
      ile DatePeriod örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$start = new DateTime('2012-07-01');
$interval = new DateInterval('P7D');
$end = new DateTime('2012-07-31');

$period = new DatePeriod($start, $interval, $end,
                         DatePeriod::EXCLUDE_START_DATE);

// DatePeriod nesnesi üzerinde yineleme yaparak
// yinelenen dönemlerin tarihleri basılabilir.
// Bu defa, 2012-07-01 basılmayacak.
foreach ($period as $date) {
    echo $date->format('Y-m-d')."\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
2012-07-08
2012-07-15
2012-07-22
2012-07-29
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>- Bir yıldaki tüm son Perşembeleri gösteren DatePeriod örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
$begin = new DateTime('2021-12-31');
$end = new DateTime('2022-12-31 23:59:59');

$interval = DateInterval::createFromDateString('last thursday of next month');
$period = new DatePeriod($begin, $interval, $end, DatePeriod::EXCLUDE_START_DATE);

foreach ($period as $dt) {
    echo $dt->format('l Y-m-d'), "\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Thursday 2022-01-27
Thursday 2022-02-24
Thursday 2022-03-31
Thursday 2022-04-28
Thursday 2022-05-26
Thursday 2022-06-30
Thursday 2022-07-28
Thursday 2022-08-25
Thursday 2022-09-29
Thursday 2022-10-27
Thursday 2022-11-24
Thursday 2022-12-29
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <simpara>
   ISO 8601 belirtiminin 4.5 "Recurring time interval" bölümünde belirtilen
   sınırsız sayıda tekrarlama desteklenmemektedir. Yani,
   <parameter>isostr</parameter> için <literal>"R/..."</literal> çalışmayacağı
   gibi <parameter>end</parameter> için &null; da çalışmayacaktır
  </simpara>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
