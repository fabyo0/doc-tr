<?xml version="1.0" encoding="UTF-8"?>
<!-- EN-Revision: 2eb43ad4f41a8c62516abd804721786e50717af6 Maintainer: onurozgurozkan Status: ready -->
<refentry xml:id="function.call-user-func" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>call_user_func</refname>
  <refpurpose>İlk değiştirgede belirtilen kullanıcı işlevini çağırır
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>call_user_func</methodname>
   <methodparam><type>callable</type><parameter>işlev</parameter></methodparam>
   <methodparam rep="repeat"><type>mixed</type><parameter>değiştirgeler</parameter></methodparam>
  </methodsynopsis>
  <para>
   <parameter>işlev</parameter> değiştirgesi ile belirtilen geriçağırım
   işlevini belirtilen <parameter>değiştirgeler</parameter>i aktararak
   çağırır.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>işlev</parameter></term>
     <listitem>
      <para>
       Çağırılacak geriçağırım işlevi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>değiştirgeler</parameter></term>
     <listitem>
      <para>
       İşleve sıfır veya daha fazla sayıda değiştirge aktarılabilir.
      </para>
      <note>
       <para>
        <function>call_user_func</function> işlevi gönderimli değiştirgeleri
        aktarmaz.
        <example>
         <title>- <function>call_user_func</function> örneği ve gönderimler
         </title>
         <programlisting role="php">
<![CDATA[
<?php
error_reporting(E_ALL);

function say(&$sayı)
{
    $sayı++;
}

$a = 0;
call_user_func('say', $a);
echo $a."\n";

// yerine bu da kullanılabilir
call_user_func_array('say', array(&$a));
echo $a."\n";

// ayrıca, bir değişken işlev de kullanılabilir
$increment = 'increment';
$increment($a);
echo $a."\n";
?>
]]>
         </programlisting>
         &example.outputs;
         <screen>
<![CDATA[
Warning: Parameter 1 to increment() expected to be a reference, value given in …
0
1
2
]]>
         </screen>
        </example>
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Geriçağırım işlevinin dönüş değerini döndürür.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- <function>call_user_func</function> örneği</title>
    <programlisting role="php">
<![CDATA[
<?php
function berber($tür)
{
    echo "Demek $tür kesimi istiyorsunuz, sorun yok.\n";
}
call_user_func('berber', "saç");
call_user_func('berber', "sakal");
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Demek saç kesimi istiyorsunuz, sorun yok.
Demek sakal kesimi istiyorsunuz, sorun yok.
]]>
    </screen>
   </example>

   <example>
    <title>- İsim alanı ismi kullanarak <function>call_user_func</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

namespace Mesela;

class Misal {
    static public function dnm() {
        print "Merhaba Dünyalı!\n";
    }
}

call_user_func(__NAMESPACE__ .'\Misal::dnm');
call_user_func(array(__NAMESPACE__ .'\Misal', 'dnm'));

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Merhaba Dünyalı!
Merhaba Dünyalı!
]]>
    </screen>
   </example>
   <example>
    <title>- Sınıf yöntemi kullanarak <function>call_user_func</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php

class Sınıfım {
    static function selam_ver()
    {
        echo "Merhaba!\n";
    }
}

$sınıf = "Sınıfım";

call_user_func(array($sınıf, 'selam_ver'));
call_user_func($sınıf .'::selam_ver');

$nesne = new Sınıfım();

call_user_func(array($nesne, 'selam_ver'));

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Merhaba!
Merhaba!
Merhaba!
]]>
    </screen>
   </example>
   <example>
    <title>- Lamda işlevi kullanarak <function>call_user_func</function>
    </title>
    <programlisting role="php">
<![CDATA[
<?php
call_user_func(function($arg) { print "[$arg]\n"; }, 'test');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
[test]
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.func-callback-exceptions;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>call_user_func_array</function></member>
   <member><function>is_callable</function></member>
   <member><link linkend="functions.variable-functions">Değişken işlevler</link></member>
   <member><methodname>ReflectionFunction::invoke</methodname></member>
   <member><methodname>ReflectionMethod::invoke</methodname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
