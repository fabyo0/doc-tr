<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 6712ff65342f3c87d03f90fa420782d37b9be58c Maintainer: nilgun Status: ready -->
<refentry xml:id="function.preg-match-all" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_match_all</refname>
  <refpurpose>Kapsamlı bir düzenli ifade eşleştirmesi yapar</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>preg_match_all</methodname>
   <methodparam><type>string</type><parameter>şablon</parameter></methodparam>
   <methodparam><type>string</type><parameter>konu</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">eşleşmeler</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>seçenekler</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>başlangıç</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
    <parameter>şablon</parameter> ile belirtilen düzenli ifadeyi eşleştirmek
    için <parameter>konu</parameter> dizgesinde arama yapar ve bulunanları
    <parameter>seçenekler</parameter> ile belirtilen sırada
    <parameter>eşleşmeler</parameter> dizisine yerleştirir.
  </para>
  <para>
   İlk eşleşme bulunduğunda arama işlemi bitmez, dizgenin sonuna kadar
   sürdürülür.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>şablon</parameter></term>
     <listitem>
      <para>
        Bir dizge olarak, aranacak şablon.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>konu</parameter></term>
     <listitem>
      <para>
        Şablonla eşleşeceği düşünülen dizge.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>eşleşmeler</parameter></term>
     <listitem>
      <para>
       <parameter>seçenekler</parameter> bağımsız değişkenine göre sıralanmış olarak
       tüm eşleşenleri içerecek dizi.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>seçenekler</parameter></term>
     <listitem>
      <para>
       Aşağıdaki seçeneklerin bir birleşimi belirtilebilir (Dikkat:
       <constant>PREG_PATTERN_ORDER</constant> ve
       <constant>PREG_SET_ORDER</constant> birlikte beklenen yararı sağlamaz.):
       <variablelist>
        <varlistentry>
         <term><constant>PREG_PATTERN_ORDER</constant></term>
         <listitem>
          <para>
           <varname>$eşleşmeler[0]</varname> şablonun tamamıyla eşleşen
           dizgeyi, <varname>$eşleşmeler[1]</varname> ve sonrakiler alt
           şablonlarla eşleşen alt dizgeleri içermek üzere sonuçları sıralar.
          </para>
          <para>
           <informalexample>
            <programlisting role="php">
<![CDATA[
<?php
preg_match_all("|<[^>]+>(.*)</[^>]+>|U",
    "<b>örnek: </b><div align=left>bu bir denemedir</div>",
    $out, PREG_PATTERN_ORDER);
echo $out[0][0] . ", " . $out[0][1] . "\n";
echo $out[1][0] . ", " . $out[1][1] . "\n";
?>
]]>
            </programlisting>
            &example.outputs;
            <screen role="html">
<![CDATA[
<b>örnek: </b>, <div align=left>bu bir denemedir</div>
örnek: , bu bir denemedir
]]>
            </screen>
            <para>
             Böylece, <varname>$out[0]</varname> şablonun tamamıyla eşleşen
             dizgeleri içeren bir dizi, <varname>$out[1]</varname> ise
             etiketler arasında kalan dizgeleri içeren bir dizi içerir.
            </para>
           </informalexample>
          </para>
          <para>
           Şablon, isimli alt şablonlar içeriyorsa,
           <parameter>$eşleşmeler</parameter> ayrıca anahtarları alt şablon
           ismi olan öğeleri de içerir.
          </para>
          <para>
           Şablon, yinelenen isimli alt şablonlar içeriyorsa,
           <parameter>$eşleşmeler[iSiM]</parameter> yalnızca en sağdaki alt
           şablonu içerir.
           <informalexample>
            <programlisting role="php">
<![CDATA[
<?php
preg_match_all(
    '/(?J)(?<isim>foo)|(?<isim>bar)/',
    'foo bar',
    $eşleşmeler,
    PREG_PATTERN_ORDER
);
print_r($eşleşmeler['isim']);
?>
]]>
            </programlisting>
            &example.outputs;
            <screen>
<![CDATA[
Array
(
    [0] =>
    [1] => bar
)
]]>
            </screen>
           </informalexample>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_SET_ORDER</constant></term>
         <listitem>
          <para>
           <varname>$eşleşmeler[0]</varname> ilk eşleşme kümesini,
           <varname>$eşleşmeler[1]</varname> ve sonrakiler sonraki eşleşme
           kümelerini içermek üzere çıktıyı sıralar.
           <informalexample>
            <programlisting role="php">
<![CDATA[
<?php
preg_match_all("|<[^>]+>(.*)</[^>]+>|U",
    "<b>örnek: </b><div align=\"left\">bu bir denemedir</div>",
    $out, PREG_SET_ORDER);
echo $out[0][0] . ", " . $out[0][1] . "\n";
echo $out[1][0] . ", " . $out[1][1] . "\n";
?>
]]>
            </programlisting>
            &example.outputs;
            <screen role="html">
<![CDATA[
<b>örnek: </b>, örnek:
<div align="left">bu bir denemedir</div>, bu bir denemedir
]]>
            </screen>
           </informalexample>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_OFFSET_CAPTURE</constant></term>
         <listitem>
          <para>
           Bu seçenek etkin olduğunda, her eşleşme bulunduğunda sonraki arama
           başlangıcı da (bayt cinsinden) döner. Bu durumda, dönen dizinin
           her elemanı ayrıca  birer dizi olup, her elemanın
           <literal>0</literal> indisinde eşleşen dizge,
           <literal>1</literal> indisinde ise <parameter>konu</parameter>
           içindeki başlangıç konumunu bulunur.
           <informalexample>
            <programlisting role="php">
<![CDATA[
<?php
preg_match_all('/(foo)(bar)(baz)/', 'foobarbaz', $eşleşmeler, PREG_OFFSET_CAPTURE);
print_r($eşleşmeler);
?>
]]>
            </programlisting>
            &example.outputs;
            <screen>
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => Array
                (
                    [0] => foobarbaz
                    [1] => 0
                )

        )

    [1] => Array
        (
            [0] => Array
                (
                    [0] => foo
                    [1] => 0
                )

        )

    [2] => Array
        (
            [0] => Array
                (
                    [0] => bar
                    [1] => 3
                )

        )

    [3] => Array
        (
            [0] => Array
                (
                    [0] => baz
                    [1] => 6
                )

        )

)
]]>
            </screen>
           </informalexample>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><constant>PREG_UNMATCHED_AS_NULL</constant></term>
         <listitem>
          <para>
           Bu seçenek kullanılırsa, eşleşmeyen alt şablonlar &null; olarak,
           kullanılmazsa boş bir dize olarak rapor edilir.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <para>
       Bir sıralama seçeneği belirtilmediği takdirde
       <constant>PREG_PATTERN_ORDER</constant> öntanımlıdır.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>başlangıç</parameter></term>
     <listitem>
      <para>
       <parameter>konu</parameter> dizgesinde aramanın başlatılacağı konum;
       isteğe bağlı olup bayt cinsinden belirtilir.
      </para>
      <note>
       <para>
        <parameter>başlangıç</parameter> bağımsız değişkeninin kullanımı,
        <code>substr($subject, $offset)</code> ile konu dizgede
        belirtilen başlangıca göre işleve bir alt dizge aktarmaya eşdeğer
        değildir. Çünkü, şablon, <emphasis>^</emphasis>,
        <emphasis>$</emphasis>, <emphasis>(?&lt;=x)</emphasis> gibi savlar
        içerebilir. Örnekler için <function>preg_match</function> işlevine
        bakınız.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.falseforfailure;, aksi takdirde şablonun tamamıyla eşleşenlerin
   sayısını (0 olabilir) döndürür.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &pcre.pattern.warning;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <parameter>seçenekler</parameter> bağımsız değişkeninde artık
        <constant>PREG_UNMATCHED_AS_NULL</constant> destekleniyor.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>- Bir metinden telefon numaralarının toplanması</title>
    <programlisting role="php">
<![CDATA[
<?php
preg_match_all("/\(?  (\d{3})?  \)?  (?(1)  [\-\s] ) \d{3}-\d{4}/x",
                "555-1212 veya 1-800-555-1212 numarayı arayın", $teller);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>- HTML etiketlerini bulmak (tamahkarca)</title>
    <programlisting role="php">
<![CDATA[
<?php
// \\2 bir geriye gönderim örneği olup PCRE'ye düzenli ifadenin
// ikinci yaylı ayraçlı grubuyla eşleşeceğini söyler; yani ([\w]+) ile.
// Dizge çift tırnak içine alınmış olduğundan çift tersbölü kullanılmıştır.
$html = "<b>Vurgulanmış metin</b><a href=howdy.html>buraya tıklayın</a>";

preg_match_all("/(<([\w]+)[^>]*>)(.*?)(<\/\\2>)/",
               $html, $eşleşenler, PREG_SET_ORDER);

foreach ($eşleşenler as $eşleşen) {
    echo " eşleşen: " . $eşleşen[0] . "\n";
    echo "1. parça: " . $eşleşen[1] . "\n";
    echo "2. parça: " . $eşleşen[2] . "\n";
    echo "3. parça: " . $eşleşen[3] . "\n";
    echo "4. parça: " . $eşleşen[4] . "\n\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
 eşleşen: <b>Vurgulanmış metin</b>
1. parça: <b>
2. parça: b
3. parça: Vurgulanmış metin
4. parça: </b>

 eşleşen: <a href=howdy.html>buraya tıklayın</a>
1. parça: <a href=howdy.html>
2. parça: a
3. parça: buraya tıklayın
4. parça: </a>
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>İsimli alt şablon kullanımı</title>
    <programlisting role="php">
<![CDATA[
<?php

$konu = <<<FOO
a: 1
b: 2
c: 3
FOO;
preg_match_all('/(?P<isim>\w+): (?P<rakam>\d+)/', $konu, $eşleşenler);

// Bu da olur:
//preg_match_all('/(?<isim>\w+): (?<rakam\d+)/', $konu, $eşleşenler);

    print_r($eşleşenler);

?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="html">
<![CDATA[
Array
(
    [0] => Array
        (
            [0] => a: 1
            [1] => b: 2
            [2] => c: 3
        )

    [isim] => Array
        (
            [0] => a
            [1] => b
            [2] => c
        )

    [1] => Array
        (
            [0] => a
            [1] => b
            [2] => c
        )

    [rakam] => Array
        (
            [0] => 1
            [1] => 2
            [2] => 3
        )

    [2] => Array
        (
            [0] => 1
            [1] => 2
            [2] => 3
        )

)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="pcre.pattern">PCRE Şablonları</link></member>
    <member><function>preg_quote</function></member>
    <member><function>preg_match</function></member>
    <member><function>preg_replace</function></member>
    <member><function>preg_split</function></member>
    <member><function>preg_last_error</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
